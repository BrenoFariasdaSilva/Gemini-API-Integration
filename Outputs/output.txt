## Capítulo 1 - Introdução (Reescrito)

\chapter{Introdução}
\label{cap:introducao}

% Contexto e Conceitos Iniciais de SSDs.
Os avanços tecnológicos no campo de armazenamento de dados têm sido fundamentais para suportar a explosão de dados digitais nas últimas décadas. Entre as soluções de armazenamento, os \gls{ssd}s destacam-se por sua velocidade superior de acesso aos dados e resistência a choques físicos quando comparados aos \gls{hdd}s tradicionais \cite{UnderstandingSSD:Chen2009, EnergyEfficiencySSD:Park2011}. Além disso, os \gls{ssd}s utilizam memória flash para armazenar dados, o que elimina as partes móveis presentes nos \gls{hdd}s e oferece melhor desempenho em leitura e escrita \cite{UnderstandingSSD:Chen2009, EnergyEfficiencySSD:Park2011}. A memória flash usada nos \gls{ssd}s é tipicamente do tipo NAND, projetada para armazenamento de dados com alta densidade e permite acesso apenas em unidades de setores. A maioria dos \gls{ssd}s disponíveis no mercado é baseada em memórias NAND flash \cite{UnderstandingSSD:Chen2009}.

% Estrutura e Componentes dos SSDs.
Os \gls{ssd}s são dispositivos de armazenamento que utilizam memória não-volátil para guardar dados de forma permanente \cite{UnderstandingSSD:Chen2009}. Ao contrário dos discos rígidos tradicionais, que usam discos magnéticos rotativos e cabeças de leitura/escrita mecânicas, os \gls{ssd} são construídos inteiramente a partir de componentes eletrônicos. Esta estrutura compreende principalmente um controlador de memória e vários chips de memória flash \cite{SummarySSDFTL:AccelaZhao2017}. O controlador é um processador especializado que gerencia as operações de leitura e escrita na memória flash e otimiza o desempenho do \gls{ssd} por meio de algoritmos \gls{ftl}, como o ``\textit{Page-Mapping}'' \cite{EnergyEfficiencySSD:Park2011}. Os chips de memória flash, feitos geralmente de silício, são organizados internamente em uma hierarquia de ``\textit{dies}'', planos e blocos, onde cada bloco é dividido em páginas que são as menores unidades de dados para leitura e escrita. Estes blocos são as unidades de limpeza, o que destaca uma característica fundamental dos \gls{ssd}: a necessidade de apagar um bloco inteiro para reescrever qualquer parte dele \cite{EnergyEfficiencySSD:Park2011}.

% Detalhamento sobre SSDs e Algoritmos FTL.
A memória flash, no entanto, possui suas peculiaridades, como a limitação no número de ciclos de escrita - associado a operações \gls{p/e} - e a necessidade de um mecanismo de gerenciamento sofisticado chamado \gls{ftl} \cite{UnderstandingSSD:Chen2009, EnergyEfficiencySSD:Park2011}. Os algoritmos \gls{ftl} são responsáveis por fornecer uma camada de emulação, a qual deve mapear os dados entre a interface do sistema e a memória flash física, gerenciando operações de leitura, escrita e a limpeza de dados de forma eficiente para prolongar a vida útil do dispositivo \cite{FTLAlgorithms:Kwon2011, EnergyEfficiencySSD:Park2011}. Existem vários tipos algoritmos \gls{ftl}, como o \textit{page-mapping}, \textit{block-mapping} e \textit{hybrid-mapping}, cada um com suas estratégias para otimizar o desempenho e a durabilidade \cite{FTLAlgorithms:Kwon2011, EnergyEfficiencySSD:Park2011}.

% Implicações do uso de algoritmos FTL.
A utilização de algoritmos \gls{ftl} nos \gls{ssd}s tem impactos significativos no desempenho e na durabilidade desses dispositivos. Esses algoritmos são essenciais para gerenciar as limitações da memória flash, como a granularidade das operações de escrita e limpeza e o desgaste irregular dos blocos de memória. Um componente crítico desses algoritmos é o \textit{wear-leveling}, que distribui as operações de escrita e limpeza de forma uniforme por todos os blocos da memória flash para evitar o desgaste prematuro de qualquer área específica, prolongando assim a vida útil do \gls{ssd} \cite{BAST:JesungKim2002}. 

% Implicações do uso de algoritmos FTL.
Existem diferentes estratégias de mapeamento implementadas nos algoritmos \gls{ftl}, como \textit{page-mapping}, \textit{block-mapping}, e \textit{hybrid-mapping} \cite{FTLAlgorithms:Kwon2011}. O \textit{page-mapping} oferece acesso direto a qualquer página de dados, permitindo um desempenho superior em operações de leitura e escrita aleatórias, mas requer mais memória para o mapeamento de páginas \cite{EnergyEfficiencySSD:Park2011}. O \textit{block-mapping}, por outro lado, mapeia blocos inteiros, o que reduz o consumo de memória do controlador, mas pode aumentar o tempo de escrita devido à necessidade de cópias e limpezas mais frequentes \cite{EnergyEfficiencySSD:Park2011}. O \textit{hybrid-mapping} combina as técnicas de \textit{page} e \textit{block-mapping} para equilibrar desempenho e eficiência no uso da memória \cite{EnergyEfficiencySSD:Park2011}. Cada uma dessas estratégias apresenta vantagens e desvantagens que devem ser consideradas na escolha do algoritmo \gls{ftl} mais adequado para uma aplicação específica, levando em conta o \textit{trade-off} entre desempenho, durabilidade e consumo de recursos \cite{FTLAlgorithms:Kwon2011, EnergyEfficiencySSD:Park2011}.

% Problemas dos SSDs: Incertezas, desgaste, MTTF, limite escrita, fragmentação, cache para melhorar performance.
Os \gls{ssd}s enfrentam diversos problemas que impactam seu desempenho e longevidade. Uma das principais incertezas está relacionada ao desgaste das células de memória \textit{flash}, que possuem um número limitado de ciclos de escrita (\gls{p/e}), variando conforme o tipo de célula (\gls{slc}, \gls{mlc}, \gls{tlc}, \gls{qlc}) \cite{SummarySSDFTL:AccelaZhao2017, kingspecNANDFlash}. Esse desgaste reduz a vida útil dos \gls{ssd}s, levando à falha do dispositivo após exceder seu limite de escrita. Outro problema significativo é a fragmentação, tanto interna quanto externa, que afeta a eficiência das operações de leitura e escrita. A fragmentação interna ocorre dentro de um bloco, enquanto a fragmentação externa ocorre entre blocos, ambas impactando negativamente a performance do \gls{ssd} \cite{UnderstandingSSD:Chen2009}. Para mitigar esses problemas, alguns \gls{ssd}s são equipados com um \textit{buffer} de \gls{ram} externo para armazenar em cache dados ou metadados, melhorando a performance geral \cite{UnderstandingSSD:Chen2009}. Além disso, a manutenção da tabela de mapeamento e a realização de processos em segundo plano, como limpeza e \textit{readahead}, são essenciais para a gestão eficiente do \gls{ssd}. Apesar dessas soluções, a durabilidade e a confiabilidade dos \gls{ssd}s continuam sendo desafios críticos para a tecnologia \cite{UnderstandingSSD:Chen2009}.

% Objetivo do Trabalho
O presente trabalho visa realizar uma análise comparativa entre diferentes algoritmos de \gls{ftl}, avaliando como cada um impacta o desempenho, a eficiência no uso do espaço e a durabilidade dos \gls{ssd}s. Através desta análise, busca-se identificar qual algoritmo proporciona a melhor combinação de desempenho e eficiência em diferentes cenários, contribuindo assim para o entendimento dessas tecnologias de armazenamento robustas e seus impactos com relação a sustentabilidade.

% Metodologia do trabalho
A metodologia utilizada neste trabalho se baseia em uma revisão bibliográfica abrangente sobre algoritmos \gls{ftl} e uma análise comparativa dos três principais tipos: \textit{page-mapping}, \textit{block-mapping} e \textit{hybrid-mapping}. A revisão bibliográfica visa compreender os princípios de funcionamento de cada algoritmo, suas vantagens e desvantagens, e identificar as principais métricas de avaliação de desempenho, durabilidade e eficiência energética. A análise comparativa será realizada através de características observadas nas implementações dos algoritmos \gls{ftl} estudados conforme os aspectos mencionados anteriormente.

% Resultados do trabalho
Os resultados obtidos através da análise comparativa indicam que os algoritmos \gls{ftl} de \textit{hybrid-mapping} geralmente apresentam a melhor combinação de eficiência, durabilidade e desempenho. Essa abordagem, ao combinar as vantagens do \textit{page-mapping} e \textit{block-mapping}, oferece uma solução mais flexível e adaptável a diferentes padrões de acesso aos dados. Os algoritmos baseados em log, embora apresentem um desempenho promissor em termos de latência de escrita, podem ter um impacto variável na eficiência no uso do espaço e na durabilidade, dependendo da implementação específica.

% Limitações do trabalho
A pesquisa apresenta algumas limitações, como (i) Um conjunto relativamente restrito de algoritmos selecionados; (ii) Não presença de um simulador, de modo a fazer uma análise empírica entre os algoritmos. Um simulador encontrado foi o \url{https://github.com/shehbazj/simpleFTL}; (iii) A comparação dos algoritmos é limitado a um conjunto específico de três aspectos.

% Importância do Estudo
A eficácia dos algoritmos \gls{ftl} é fundamental não apenas para maximizar o desempenho e a longevidade dos \gls{ssd}s, mas também para minimizar o consumo de energia, o que é crucial tanto em centros de dados quanto em aplicações móveis. A otimização desses algoritmos pode resultar em uma redução significativa do consumo de energia e aumento da eficiência operacional \cite{EnergyEfficiencySSD:Park2011, FTLAlgorithms:Kwon2011, UnderstandingSSD:Chen2009}, essenciais para sustentar as crescentes demandas de processamento de dados e armazenamento em grande escala. Além disso, uma compreensão aprofundada da estrutura e do funcionamento dos \gls{ssd}s impacta significativamente tanto o usuário final, quanto para a indústria \cite{Claburn2008, Narayanan2009, Robb2008, Schroeder2007}, principalmente focando em termos de custo-benefício e adequação do hardware conforme as suas necessidades. Portanto, este estudo é justificado na premissa de que o entendimento da estrutura e funcionamento dos \gls{ssd}s é uma utilidade de âmbito geral.

Cabe destacar que, apesar da importância dessa área, existem poucos trabalhos disponíveis em repositórios amplamente reconhecidos como ACM ou IEEE. Isso ocorre porque a tecnologia de \gls{ssd} já atingiu um alto nível de desenvolvimento, sendo as limitações impostas pelo uso de memória flash bem conhecidas e estudadas \cite{UnderstandingSSD:Chen2009} e os estudos que detalham a estrutura dos \gls{ssd}s, seus desafios específicos, e comparações entre diferentes tipos de implementações de algoritmos \gls{ftl} em diversos cenários de uso são ainda mais nichados e escassos. Por essa razão, este trabalho se apoia em uma variedade de fontes, muitas das quais estão fora dos canais tradicionais, para construir um panorama detalhado e atualizado dessa área vital, mas pouco explorada da tecnologia.

% Estrutura do Trabalho
\section{Estrutura do Trabalho}

O presente trabalho está organizado da seguinte forma: O Capítulo \ref{cap:referencialTeorico} oferece uma revisão detalhada da literatura sobre a arquitetura dos \gls{ssd}s, a função da memória flash, e os principais algoritmos de \gls{ftl}. O Capítulo \ref{cap:trabalhosRelacionados} descreve os trabalhos relacionados com este projeto de pesquisa. O Capítulo \ref{cap:proposta} apresenta a proposta de trabalho. O Capítulo \ref{cap:metodologia} discorre sobre a metodologia utilizada para comparar os algoritmos \gls{ftl}. O Capítulo \ref{cap:resultados} apresenta e discute os resultados obtidos. O Capítulo \ref{cap:conclusao} conclui o estudo com as considerações finais e sugestões para futuras pesquisas. 
